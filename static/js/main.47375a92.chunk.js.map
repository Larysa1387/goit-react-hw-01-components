{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","jsonsFiles/eyes-285825_960_720.webp","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/Transaction.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","styles","container_align","card_info","avatar_img","src","alt","width","stats_item","label","quantity","followers","views","likes","defaultProps","defaultImage","protoType","PropTypes","string","isRequired","shape","number","Statistics","title","statDatas","colors","statistics","stat_list","map","index","id","percentage","item","style","backgroundColor","length","FriendListItem","activeStatus","isOnline","active","offline","align","FriendList","friends","friend_list","Transaction","type","amount","currency","propType","TransactionHistory","transactions","transaction_history","table_header","App","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47375a92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_align\":\"Profile_container_align__3SqqY\",\"card_info\":\"Profile_card_info__15K2F\",\"avatar_img\":\"Profile_avatar_img__3SCou\",\"name\":\"Profile_name__2S-Rj\",\"tag\":\"Profile_tag__3rwkN\",\"location\":\"Profile_location__z_5ek\",\"stats\":\"Profile_stats__2G-7j\",\"stats_item\":\"Profile_stats_item__3i4oa\",\"label\":\"Profile_label__YUFPj\",\"quantity\":\"Profile_quantity__1Ivyt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__38Bef\",\"align\":\"FriendList_align__1g28G\",\"status\":\"FriendList_status__16nzr\",\"active\":\"FriendList_active__3HFH5 FriendList_status__16nzr\",\"offline\":\"FriendList_offline__2YeE8 FriendList_status__16nzr\",\"avatar\":\"FriendList_avatar__3vGow\",\"name\":\"FriendList_name__1VW85\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2EaBl\",\"title\":\"Statistics_title__1LCrI\",\"stat_list\":\"Statistics_stat_list__3hjNj\",\"item\":\"Statistics_item__3U3we\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__2ceuZ\",\"table_header\":\"TransactionHistory_table_header__H_-KQ\"};","export default __webpack_public_path__ + \"static/media/eyes-285825_960_720.7d1cdccd.webp\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport defaultImage from '../../jsonsFiles/eyes-285825_960_720.webp';\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => (\r\n\t<div className={styles.container_align}>\r\n\t\t<div className={styles.card_info}>\r\n\t\t\t<img className={styles.avatar_img} src={avatar} alt=\"User avatar\" width=\"100\" />\r\n\t\t\t<p className={styles.name}>{name}</p>\r\n\t\t\t<p className={styles.tag}>@{tag}</p>\r\n\t\t\t<p className={styles.location}>{location}</p>\r\n\t\t</div>\r\n\t\t<ul className={styles.stats}>\r\n\t\t\t<li className={styles.stats_item}>\r\n\t\t\t\t<span className={styles.label}>Followers</span>\r\n\t\t\t\t<span className={styles.quantity}>{stats.followers}</span>\r\n\t\t\t</li>\r\n\t\t\t<li className={styles.stats_item}>\r\n\t\t\t\t<span className={styles.label}>Views</span>\r\n\t\t\t\t<span className={styles.quantity}>{stats.views}</span>\r\n\t\t\t</li>\r\n\t\t\t<li className={styles.stats_item}>\r\n\t\t\t\t<span className={styles.label}>Likes</span>\r\n\t\t\t\t<span className={styles.quantity}>{stats.likes}</span>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t</div>\r\n);\r\n\r\nProfile.defaultProps = {\r\n\tavatar: defaultImage,\r\n};\r\n\r\nProfile.protoType = {\r\n\tavatar: PropTypes.string,\r\n\tname: PropTypes.string.isRequired,\r\n\ttag: PropTypes.string.isRequired,\r\n\tlocation: PropTypes.string.isRequired,\r\n\t// stats: PropTypes.object.isRequired,\r\n\tstats: PropTypes.shape({\r\n\t\tfollowers: PropTypes.number.isRequired,\r\n\t\tviews: PropTypes.number.isRequired,\r\n\t\tlikes: PropTypes.number.isRequired,\r\n\t}),\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css'\r\n\r\nconst Statistics = ({ title, statDatas }) => {\r\n  const colors = ['#ff00b9', '#e7f043', '#852eae', '#3986ae', '#398624'];\r\n  return (\r\n\t\t<section className={styles.statistics}>\r\n\t\t\t<h2 className={styles.title}>{title}</h2>\r\n\t\t\t<ul className={styles.stat_list}>\r\n\t\t\t\t{statDatas.map(({ id, label, percentage }, index) => (\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\tclassName={styles.item}\r\n\t\t\t\t\t\tstyle={{ backgroundColor: colors[index % colors.length] }}>\r\n\t\t\t\t\t\t<span className={styles.label}>{label}</span>\r\n\t\t\t\t\t\t<span className={styles.percentage}>{percentage}%</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</section>\r\n\t);};\r\n\r\nStatistics.defaultProps = {\r\n\tstatDatas: [],\r\n};\r\n\r\nStatistics.propTypes = {\r\n\ttitle: PropTypes.string,\r\n  statDatas: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n  })).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport defaultImage from '../../jsonsFiles/eyes-285825_960_720.webp';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  const activeStatus = (isOnline === true) ? styles.active : styles.offline;\r\n  return (\r\n\t\t<div className={styles.align}>\r\n\t\t\t<span className={activeStatus}></span>\r\n\t\t\t<img\r\n\t\t\t\tclassName={styles.avatar}\r\n\t\t\t\tsrc={avatar}\r\n\t\t\t\talt=\"user avatar\"\r\n\t\t\t\twidth=\"48\"\r\n\t\t\t/>\r\n\t\t\t<p className={styles.name}>{name}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nFriendListItem.defaultProps = {\r\n\tavatar: defaultImage,\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n\tavatar: PropTypes.string,\r\n\tname: PropTypes.string.isRequired,\r\n\tisOnline:PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => (\r\n\t<ul className={styles.friend_list}>\r\n\t\t{friends.map(({ id, name, avatar, isOnline }) => (\r\n\t\t\t<li key={id}>\r\n\t\t\t\t<FriendListItem\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tavatar={avatar}\r\n\t\t\t\t\tisOnline={isOnline}\r\n\t\t\t\t/>\r\n\t\t\t</li>\r\n\t\t))}\r\n\t</ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(PropTypes.shape({\r\n    id:PropTypes.number.isRequired,\r\n  })).isRequired,\r\n};\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Transaction = ({ id, type, amount, currency }) => (\r\n\t<tr>\r\n\t\t<td>{type}</td>\r\n\t\t<td>{amount}</td>\r\n\t\t<td>{currency}</td>\r\n\t</tr>\r\n);\r\n\r\nTransaction.propType = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency:PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Transaction;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Transaction from './Transaction';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ transactions }) => (\r\n\t<table className={styles.transaction_history}>\r\n\t\t<thead className={styles.table_header}>\r\n\t\t\t<tr>\r\n\t\t\t\t<th>Type</th>\r\n\t\t\t\t<th>Amount</th>\r\n\t\t\t\t<th>Currency</th>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\r\n\t\t<tbody>\r\n\t\t\t{transactions.map(({ id, type, amount, currency }) => (\r\n\t\t\t\t<Transaction key={id} type={type} amount={amount} currency={currency} />\r\n\t\t\t))}\r\n\t\t</tbody>\r\n\t</table>\r\n);\r\n\r\n// TransactionHistory.defaultProps = {\r\n//   transactions: [],\r\n// };\r\n\r\nTransactionHistory.propTypes = {\r\n  transactions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n  })\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport user from './jsonsFiles/user.json';\nimport statDatas from './jsonsFiles/statistical-data.json';\nimport friends from './jsonsFiles/friends.json';\nimport transactions from './jsonsFiles/transactions.json'\n\nconst App = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Profile\n\t\t\t\tavatar={user.avatar}\n\t\t\t\tname={user.name}\n\t\t\t\ttag={user.tag}\n\t\t\t\tlocation={user.location}\n\t\t\t\tstats={user.stats}\n\t\t\t/>\n\t\t\t<Statistics title=\"Upload stats\" statDatas={statDatas} />\n\t\t\t<FriendList friends={friends} />\n\t\t\t<TransactionHistory transactions={transactions} />\n\t\t</div>\n\t);\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}